import {
    ActionIcon,
    Button,
   
    Input,
    PasswordInput,
    Table,
    TextInput,
  } from "@mantine/core";
  import Head from "next/head";
  import Link from "next/link";
  import styles from "./styles.module.scss";

  import {  IVendaType, IVendaView } from "../../services/venda.service";
  import { GetServerSidePropsContext } from "next/types";
  import { FC, useState } from "react";

  import { formattedValue } from "../../utils/formatter";
  import { convertDate } from "../../utils/string";
  import { useRouter } from "next/router";
import { Layout } from "../../components/Layout";
import { IconEdit, IconTrash } from "@tabler/icons-react";
  const ths = (
    <tr>
      <th>Cliente</th>
      <th>Total da Venda</th>
      <th>Data da Venda</th>
      <th>Entrega</th>
      <th>Entregador</th>
      <th>Data da Entrega</th>
      <th>Pago</th>
      <th>Forma de Pagamento</th>
      <th>Status da Venda</th>
      <th>Ações</th>
    </tr>
  );
  interface VendaProps {
    allVenda: IVendaView[];
  }
  
  const Dashboard: FC<VendaProps> = ({ allVenda }) => {
    const { push } = useRouter();
    const [venda, setVenda] = useState<IVendaView[]>(allVenda);
    console.log(allVenda);
  
    const rows = venda.map((element) => (
      <tr key={element.id_venda}>
        <td>{element.cliente}</td>
        <td>{formattedValue(element.total_da_venda)}</td>
        <td>{convertDate(element.data_da_venda)}</td>
        <td>{element.entrega === "s" ? "Sim" : "Não"}</td>
        <td>{element.entregador ?? "Nenhum"}</td>
        <td>{convertDate(element.dt_entrega)}</td>
        <td>{element.pago === "s" ? "Sim" : "Não"}</td>
        <td>{element.forma_de_pagamento}</td>
        <td>{element.status_da_venda}</td>
        <td className={styles.tableFlex}>
          <ActionIcon
            onClick={() => push(`/dashboard/edit/${element.id_venda}`)}
            size={20}
            color="blue"
          >
            <IconEdit />
          </ActionIcon>
          <ActionIcon size={20} color="red">
            <IconTrash />
          </ActionIcon>
        </td>
      </tr>
    ));
  
    return (
      <div>
        <Head>
          <title>Din Din Com</title>
          <meta name="description" content="Generated by Din Din Com" />
          <link rel="icon" href="/logo.svg" />
        </Head>
        <Layout >
        <main className={styles.containerProduct}>
          <div className={styles.tableStyle}>
            <Button
              component={Link}
              href="/dashboard/create"
              color="blue"
              size="md"
            >
              Adicionar
            </Button>
            <Table striped highlightOnHover  withColumnBorders>
              <thead>{ths}</thead>
              <tbody>{rows}</tbody>
            </Table>
          </div>
        </main>
        </Layout>
      </div>
    );
  };
  
  export default Dashboard;
  
  export async function getServerSideProps(ctx: GetServerSidePropsContext) {
    try {
    //   const response = await getVenda();
  
      return {
        props: {
          allVenda:  [
            {
              id_venda: 1,
              cliente: 'Cliente A',
              total_da_venda: 100.5,
              data_da_venda: '2023-10-20',
              entrega: 's',
              entregador: 'Entregador A',
              dt_entrega: '2023-10-25',
              pago: 's',
              forma_de_pagamento: 'Cartão de Crédito',
              status_da_venda: 'Concluída',
            },
            {
              id_venda: 2,
              cliente: 'Cliente B',
              total_da_venda: 75.0,
              data_da_venda: '2023-10-21',
              entrega: 'n',
              entregador: null,
              dt_entrega: null,
              pago: 'n',
              forma_de_pagamento: 'Dinheiro',
              status_da_venda: 'Pendente',
            },
            // Adicione mais objetos conforme necessário
          ],
        },
      };
    } catch {
      return {
        props: {
          allVenda: [],
        },
      };
    }
  }